{"version":3,"sources":["components/Post.js","components/Posts.js","components/Pagination.js","components/SearchBar.js","images/reddit.jpg","components/Header.js","App.js","index.js"],"names":["Post","post","title","author","timestamp","created","comments","num_comments","ups","url","className","dateObj","Date","time","timeFull","toLocaleTimeString","hour","minute","split","modifier","hours","minutes","parseInt","getTime","date","toLocaleDateString","getDate","style","length","fontSize","slice","href","rel","target","Posts","posts","loading","currentPage","postsPerPage","indexLastPost","indexFistPost","currentPosts","role","map","index","data","Pagination","totalPosts","paginate","pageNumbers","i","Math","ceil","push","number","onClick","SerachBar","search","nameForm","useRef","ref","onSubmit","form","current","value","name","type","placeholder","Header","src","reddit","App","useState","setPosts","setLoading","setCurrentPage","setUrl","fetchPosts","a","axios","get","response","children","useEffect","searchWord","pageNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65c8de42.chunk.js","sourcesContent":["const Post = ({post}) => {\r\n    const {title, author, created : timestamp, num_comments : comments, ups , url} = post;\r\n    \r\n    const getTime = timeFull => {\r\n        let time12h = timeFull.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n        const [time, modifier] = time12h.split(' ');   \r\n        let [hours, minutes] = time.split(':');\r\n        if (hours === '12') {\r\n          hours = '00';\r\n        }\r\n        if (modifier === 'PM') {\r\n          hours = parseInt(hours, 10) + 12;\r\n        }\r\n        return `${hours}:${minutes}`;\r\n    }\r\n\r\n    const getDate  = timestamp => {\r\n        let dateObj = new Date(timestamp);\r\n        let time = getTime(dateObj);\r\n        let date = dateObj.toLocaleDateString(\"en-GB\");\r\n        return `${time} ${date}`;\r\n    }\r\n     \r\n    return (  \r\n        <li className=\"list-group-item\">\r\n            <div className=\"user\">\r\n                {author}\r\n            </div>\r\n            <div className=\"date\"> {getDate(timestamp)}</div>\r\n            <h1 \r\n                style={ title.length > 30 ? {fontSize : 20 } : {fontSize : 24 } }\r\n                >\r\n                {title.length > 80 ? title.slice(0,80) + '...' : title }\r\n            </h1>\r\n            <div className=\"metrics\">\r\n                <div className=\"ups\">\r\n                    {ups}\r\n                </div>\r\n                <div className=\"comments\">\r\n                    {comments}\r\n                </div>\r\n            </div>\r\n            <a \r\n                href={url} \r\n                rel=\"noreferrer\"\r\n                target=\"_blank\"\r\n                >\r\n                <button className=\"btn btn-light\">Show on Reddit</button>\r\n            </a> \r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Post;","import '../styles/Posts.css'\r\nimport React from \"react\";\r\nimport Post from \"../components/Post\";\r\n\r\nconst Posts = ({ posts, loading, currentPage, postsPerPage }) => {\r\n    const indexLastPost = currentPage * postsPerPage;\r\n    const indexFistPost = indexLastPost - postsPerPage;\r\n    const currentPosts = posts.slice(indexFistPost, indexLastPost);\r\n\r\n    if(loading){\r\n        return (\r\n            <div className=\"w-100 mt-5 mb-5 d-flex justify-content-center\">\r\n                  <div className=\"spinner-border text-info\" role=\"status\"></div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return ( \r\n            <ul className=\"list-group mb-4 flex-row flex-wrap justify-content-around\"> \r\n                { currentPosts.map( (post, index) => (\r\n                        <Post key={index} post={post.data} />\r\n                    )\r\n                )}\r\n            </ul>\r\n         );\r\n    }\r\n\r\n \r\n\r\n}\r\n\r\nexport default Posts;","const Pagination = ({postsPerPage, totalPosts, paginate}) => {\r\n    const pageNumbers = [];\r\n\r\n    for(let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++){\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return ( \r\n        <nav>\r\n            <ul className=\"pagination justify-content-center\">\r\n                {pageNumbers.map(number => (\r\n                    <li key={number} className=\"page-item\">\r\n                        <a  \r\n                        className=\"page-link\" \r\n                        href=\"#/\"\r\n                        rel=\"noreferrer\"\r\n                        onClick={() => paginate(number)} \r\n                        >\r\n                            {number}\r\n                        </a>\r\n                     </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n     );\r\n}\r\n\r\nexport default Pagination ;","import { useRef } from \"react\";\r\n\r\nconst SerachBar = ({search}) => {\r\n    const nameForm = useRef(null);\r\n    \r\n    const handleSearchClick = () => {\r\n       const form = nameForm.current;\r\n        search(form['searchword'].value);\r\n    }\r\n    return ( \r\n        <div className=\"form-group d-flex  mb-3\">\r\n            <form ref={nameForm} onSubmit={handleSearchClick} >\r\n               <input  name=\"searchword\" type=\"text\" className=\"form-control\" placeholder=\"Type Your Subject...\" />\r\n               <button type=\"submit\" className=\"btn btn-primary mb-2\" >Search</button>\r\n \r\n            </form>  \r\n         </div>\r\n     );\r\n}\r\n\r\nexport default SerachBar;","export default __webpack_public_path__ + \"static/media/reddit.423bb9cb.jpg\";","import reddit from '../images/reddit.jpg';\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <header className=\"pt-3 pb-3\">\r\n            <div className=\"header-wrapper\">\r\n                <img src={reddit} />\r\n                <h1 className=\"text-light \">Ask Reddit Anything</h1>\r\n            </div>\r\n        </header>\r\n     );\r\n}\r\n\r\nexport default Header;","import { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles/App.css';\r\nimport axios from 'axios';\r\nimport Posts from './components/Posts';\r\nimport Pagination from './components/Pagination';\r\nimport SerachBar from './components/SearchBar';\r\nimport Header from './components/Header';\r\n\r\nconst defaultURL = 'https://www.reddit.com/r/askreddit.json';\r\nconst postsPerPage = 6;\r\n\r\nfunction App() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [url, setUrl] = useState(defaultURL);\r\n  \r\n  const fetchPosts = async () =>  {\r\n    setLoading(true);\r\n    const response = await axios.get(url);\r\n    setPosts(response.data.data.children);\r\n    setLoading(false);\r\n  }\r\n  const paginate = pageNumber => {\r\n    setCurrentPage(pageNumber);\r\n  } \r\n  const generateReqUrl = keyword =>{\r\n      return 'https://www.reddit.com/r/'+ keyword +'.json';\r\n  }\r\n  const handleSearchEvent = searchWord  => {\r\n    setUrl(generateReqUrl(searchWord));\r\n    fetchPosts();\r\n    setCurrentPage(1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, [url])\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main className=\"container-fluid mb-4\">\r\n            <SerachBar   search={handleSearchEvent}/>\r\n            <Posts \r\n                posts={posts} \r\n                loading={loading} \r\n                currentPage={currentPage} \r\n                postsPerPage={postsPerPage}\r\n             />\r\n            <Pagination \r\n                postsPerPage={postsPerPage} \r\n                totalPosts={posts.length} \r\n                paginate={paginate} \r\n             />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}